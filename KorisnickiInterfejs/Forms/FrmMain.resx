<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>52</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP/stQH+77cA//S/Gf//00r/5r1F/4uFcvnbzrf/Sk1OuoJ/dgCknY4CPEFFAExOSgBBRUdET1BLrT1C
        RJAZJDhYAggpLRAvIQAfJixzoKCc////9/v89+n/+fPn//r06P/69Oj/+vTo//ny5//59Oj+///0/aio
        qv94aCv967MA//m/Av/ttgL/7bUA//3DDP/KpTP9eXh1/2RkYNsAAAseAAALACsyOQI8QUYAAAAAAAAA
        AAAAAAAAAAAAALSyrAAaISgAsrCqAmRlZQAxNjuZvLu0////9fv38OX/+vTo//r06P/69Oj/+vTo//nz
        5//38eX////2/MPFy/5rZET/1KMA//7DAf/qtAP//cAA/qWGHf8rNky4JScbHgsWIwAiKjMCPEJFADxB
        RQBAREYAPUFFA3JsVQRbWk4EPUJFBDxBRQIuNDkC////AQAAAARESEu91dPL///+8vv38eX/+vTo//r0
        6P/69Oj/+vTo//r06P/38OX////w/93d3f9tbGD/upAE///DAP74vQD/g3Ar9QAAbhwAAHQAPUJGAz9D
        RwA9QkYAPEFFADxBRQA8QUUAPEFFADxBRQA8QUUAPEFFADtARAAoLjQCAAAAAAAAABZZXF7b6uje//75
        7f348ub/+vTo//r06P/69Oj/+vTo//r06P/38eX///vs//Hw6v96fH3/n34N/fm/Af9mXTfTAAD/Av//
        AAI5PkIAPkJGADxBRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7QEQAPEFFADxBRQAvNToDAAAAAAAB
        CzFwcnHz+vfr//r16f758+f/+vTo//r06P/69Oj/+vTo//r06P/48ub/+/fp//388v+Vl5v7c2Mk/01L
        OplhVB8AUU0yBDY7QAA8QUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QUUAPEFFAD1C
        RwA5PkMFAAACAAsRFUaHiov////z//jy5v769Oj/+vTo//r06P/69Oj/+vTo//r06P/58+f/+PPm////
        9vyrrLD/OkBFswAAAAP///8BHyYsAT1ARAA8QUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEFFAD1C
        RQA9QkUAOD1FAlVYRgRRWEEAKDNLUU5LO/qoqaX////1/vfx5f/69Oj/+vTo//r06P/69Oj/+vTo//r0
        6P/59Oj/9/Hl////9/y2ta7/MDU6mi0yOABbXmADNDo+ADxBRQA7QEQAAAAAAAAAAAAAAAAAAAAAADxB
        RQBLTEUATk5GADc8RQP//00BAAAnASs0RIuUgUj//9VK/oBxQv+4u77////y//fx5f/69Oj/+vTo//r0
        6P/69Oj/+vTo//r06P/58+f/+vfq//////uQkI3/HiUqZAQLEgA8QUQDKS80ADxBRQAAAAAAAAAAADpD
        RgA8QUUALjdFAC01RQA2PEUEAABBAAAAQhZER0W8uZxI///aSvv/00z+9s1G/3FpTf/U1dT///3v//fx
        5v/69Oj/+vTo//r06P/69Oj/+fPn///67f/Oy8L/m5ub/o6Rlv80Oj/sOD1AHiguMgAyODwBPEFFAAAA
        AAA8QUUAPEFFADk/RQA4PkUBP0RFBAAXRAAFF0Q6X1pG49q2Sf//20v7/M1K//3NS///1k7/471C/25q
        Xf/r6uT//vjr//jy5//69Oj/+vTo//nz5//28OT///7y/4aFff+kfgD/poQO+19iYP9MUVWXa292AFlc
        XQNGS04AAAAAADxBRQA9QkUAMzhGAWtpRQNPWz8AHitGa39xR/vzy0v//9dL/PzMSf//z0j//85G//zL
        Rv//2Ez/yKhC/3J0df/7+O/++vTo//nz5//68+j//frt//387f////z/hoiE/+WuAP/YpwD+lJaS/4uM
        i/EAAAAdAAAAADtARAIAAAAAAAAAAAoUMgEAABAAAAARBzQ6Pp+jikX//9dH/P7RRv38zEf//c5M//zP
        U//9017//9hr//3ddvz/9of7uahk/pCPjP////b89/Hl//z26f/d2tP/ysnJ/6quuP93azr//8QA/5t8
        Dv+2uL37yMW7/x4kKmgdJCoAQUZKBAAAAAA8QUUBAAYvAAsYLhBYWFDGxapf///dVfr60Fv9/tZn/f/e
        dPz/5H7//+qG///khP/+3IH94cZ6/runbf+jlGb/QEI/5qWkoPv///n98/Do/nJuW/+WgUL/pIo///TB
        FP/lsAD/amZQ//bz7fvh3dL/Sk9Ro2VpaQBxc3MEAAAAAD1CRQMLGTYAER44SZuNYv//9Ir8/OeG/f/o
        h//83YP/6sx8/9C3cv2fj17/kodk/G9rW/8/Q0SyIiw9YAYOMTUAAAsFMDY6iZKSjf/q5uL8h4Jj/Pvb
        QP//3Ur/1a08/2pjRP/Jycj////y/Ojk2v9bX2G5ubm2AMbFwAIAAAAAPEFFAQgXNQAsNEAGQERGjXdw
        V++ol2X/kIRe+3FrVdZFR0TDWlxd/8S7qvy4sKH/UFNW1wABFhEAAA4AKzI6AV5laQJIUVgAHiQpYE5S
        VvVUVlP/koNV/IV7XPuAgYD+2NfU//767P//+e364eDX/0tPUaZmaGkAdXd2BAAAAAA+P0MAAAAAAAMK
        MgEABjAAAAMkFAQSM0EBBiglLSIRBIN9bQBJTU6LlI+C/2VlYNcAAAYeAAAAADxAQgY7QEUCOj9DATo/
        QwQQFxsAGyEmJDk/RLRyd37/zMvI/v/99v////j//v/y/v/+8v6OjYv/GyMpThIZIQA8QUUDAAAAADxB
        RQAqMj8AKDA+AVlZTwP//+UA///XAOrbkACelWYB8OOhAQAAAAIBCBY2AAUUFgAAAgAjKDECPEFFADxB
        RQAyNzwALjQ5AD5CRQNhanoBQleAACUpJzxLTk+lcnRz55OTkP6bmpb/cXNy7ywyOG0zOT4AV1pcATo/
        RAAAAAAAOz9CADxBRQA8QUUAPEFFADxBRQE8QUUDPEFFAj1CRQA6P0QBQEVIAjo/QwBESEoBPkJGAj9D
        RwA9QkYAPEFFADxBRQA8QUUAO0BEADxBRQI+Q0cCAAAAAAAAAAAAAAAKAAADKQAABC8AAAAOAAAAACwv
        MgI+Q0cAPEFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEFFADxBRQA8QUUAPEFFAzxB
        RQE8QUUAPEFFADxBRQAAAAAAAAAAADxARQA8QUUALzU6AEhMUAA6P0MDZ2prBAAAAAAAAAAAhYaEAJeX
        lQBKTlEDDRQcABohKAA8QUUA/0L///QAACf0AAAL6IIAS+kC9QnUBAELyAVqCZAElAlQAWgJoACQCkAA
        UAWAACAEgAAABIIAAAX5AAAKgAAAFcqAAAP9QAAr/qAAA/0gABHyAAAK6QAABNIAAASkAAAC0AAAAqAA
        AAKgAAACoAEgAuhCEAKjBUQEyBKRCv9F6KI=
</value>
  </data>
</root>